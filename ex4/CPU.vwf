/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2500.0;
	SIMULATION_TIME = 2500.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 100.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("alu_sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("alu_sel[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("alu_sel[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("alu_sel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("alu_sel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("alu_sel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("alu_sel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("bus_sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("bus_sel[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bus_sel";
}

SIGNAL("bus_sel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bus_sel";
}

SIGNAL("bus_sel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bus_sel";
}

SIGNAL("bus_sel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bus_sel";
}

SIGNAL("bus_sel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bus_sel";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("d")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("d[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("k")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("k[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("ld_reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ld_reg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ld_reg";
}

SIGNAL("ld_reg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ld_reg";
}

SIGNAL("ld_reg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ld_reg";
}

SIGNAL("ld_reg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ld_reg";
}

SIGNAL("ld_reg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ld_reg";
}

SIGNAL("pc_sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pc_sel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pc_sel";
}

SIGNAL("pc_sel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pc_sel";
}

SIGNAL("pc_sel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pc_sel";
}

SIGNAL("we_rd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("we_rd[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "we_rd";
}

SIGNAL("we_rd[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "we_rd";
}

SIGNAL("d[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("d~result")
{
	MEMBERS = "d[7]~result", "d[6]~result", "d[5]~result", "d[4]~result", "d[3]~result", "d[2]~result", "d[1]~result", "d[0]~result";
}

TRANSITION_LIST("alu_sel[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1300.0;
	}
}

TRANSITION_LIST("alu_sel[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 600.0;
	}
}

TRANSITION_LIST("alu_sel[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 600.0;
	}
}

TRANSITION_LIST("alu_sel[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
	}
}

TRANSITION_LIST("alu_sel[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
	}
}

TRANSITION_LIST("alu_sel[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 600.0;
	}
}

TRANSITION_LIST("bus_sel[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 700.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("bus_sel[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
	}
}

TRANSITION_LIST("bus_sel[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 500.0;
	}
}

TRANSITION_LIST("bus_sel[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 300.0;
	}
}

TRANSITION_LIST("bus_sel[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 25;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("d[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2500.0;
	}
}

TRANSITION_LIST("d[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2500.0;
	}
}

TRANSITION_LIST("d[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2500.0;
	}
}

TRANSITION_LIST("d[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2500.0;
	}
}

TRANSITION_LIST("d[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2500.0;
	}
}

TRANSITION_LIST("d[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2500.0;
	}
}

TRANSITION_LIST("d[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2500.0;
	}
}

TRANSITION_LIST("d[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2500.0;
	}
}

TRANSITION_LIST("k[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("k[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("k[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("k[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("k[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("k[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2500.0;
	}
}

TRANSITION_LIST("k[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("k[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ld_reg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("ld_reg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("ld_reg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1100.0;
	}
}

TRANSITION_LIST("ld_reg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 600.0;
	}
}

TRANSITION_LIST("ld_reg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
	}
}

TRANSITION_LIST("pc_sel[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2500.0;
	}
}

TRANSITION_LIST("pc_sel[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("pc_sel[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("we_rd[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1300.0;
	}
}

TRANSITION_LIST("we_rd[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 700.0;
	}
}

TRANSITION_LIST("d[7]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.449;
		LEVEL 1 FOR 0.149;
		LEVEL 0 FOR 198.318;
		LEVEL 1 FOR 0.622;
		LEVEL 0 FOR 99.697;
		LEVEL Z FOR 1.214;
		LEVEL 1 FOR 0.149;
		LEVEL 0 FOR 298.318;
		LEVEL 1 FOR 0.622;
		LEVEL 0 FOR 99.697;
		LEVEL Z FOR 2.606;
		LEVEL 0 FOR 297.394;
		LEVEL Z FOR 2.606;
		LEVEL 0 FOR 11.673;
		LEVEL 1 FOR 186.476;
		LEVEL Z FOR 1.851;
		LEVEL 1 FOR 0.507;
		LEVEL 0 FOR 1.39;
		LEVEL 1 FOR 5.828;
		LEVEL 0 FOR 189.35;
		LEVEL 1 FOR 0.622;
		LEVEL 0 FOR 99.697;
		LEVEL Z FOR 1.214;
		LEVEL 1 FOR 50.434;
		LEVEL 0 FOR 149.107;
		LEVEL Z FOR 1.851;
		LEVEL 0 FOR 307.725;
		LEVEL 1 FOR 3.788;
		LEVEL 0 FOR 87.41;
		LEVEL 1 FOR 0.618;
		LEVEL Z FOR 285.618;
	}
}

TRANSITION_LIST("d[6]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.04;
		LEVEL 1 FOR 0.732;
		LEVEL 0 FOR 197.648;
		LEVEL 1 FOR 1.297;
		LEVEL 0 FOR 99.109;
		LEVEL Z FOR 0.891;
		LEVEL 1 FOR 1.055;
		LEVEL 0 FOR 297.648;
		LEVEL 1 FOR 1.297;
		LEVEL 0 FOR 99.109;
		LEVEL Z FOR 2.606;
		LEVEL 0 FOR 2.728;
		LEVEL 1 FOR 0.792;
		LEVEL 0 FOR 293.874;
		LEVEL Z FOR 2.606;
		LEVEL 0 FOR 11.195;
		LEVEL 1 FOR 186.954;
		LEVEL Z FOR 1.851;
		LEVEL 1 FOR 1.648;
		LEVEL 0 FOR 0.883;
		LEVEL 1 FOR 5.098;
		LEVEL 0 FOR 189.359;
		LEVEL 1 FOR 1.297;
		LEVEL 0 FOR 99.109;
		LEVEL Z FOR 0.891;
		LEVEL 1 FOR 50.947;
		LEVEL 0 FOR 148.917;
		LEVEL Z FOR 1.851;
		LEVEL 0 FOR 2.728;
		LEVEL 1 FOR 0.792;
		LEVEL 0 FOR 304.109;
		LEVEL 1 FOR 3.41;
		LEVEL 0 FOR 87.292;
		LEVEL 1 FOR 1.21;
		LEVEL Z FOR 286.027;
	}
}

TRANSITION_LIST("d[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.293;
		LEVEL 1 FOR 0.614;
		LEVEL 0 FOR 197.657;
		LEVEL 1 FOR 1.284;
		LEVEL 0 FOR 99.251;
		LEVEL Z FOR 1.194;
		LEVEL 1 FOR 0.614;
		LEVEL 0 FOR 297.657;
		LEVEL 1 FOR 1.284;
		LEVEL 0 FOR 99.251;
		LEVEL Z FOR 2.586;
		LEVEL 0 FOR 5.305;
		LEVEL 1 FOR 0.475;
		LEVEL 0 FOR 291.634;
		LEVEL Z FOR 2.586;
		LEVEL 0 FOR 11.513;
		LEVEL 1 FOR 186.656;
		LEVEL Z FOR 1.831;
		LEVEL 1 FOR 2.075;
		LEVEL 0 FOR 0.564;
		LEVEL 1 FOR 5.074;
		LEVEL 0 FOR 189.166;
		LEVEL 1 FOR 1.284;
		LEVEL 0 FOR 99.251;
		LEVEL Z FOR 1.194;
		LEVEL 1 FOR 50.479;
		LEVEL 0 FOR 149.082;
		LEVEL Z FOR 1.831;
		LEVEL 0 FOR 5.305;
		LEVEL 1 FOR 0.475;
		LEVEL 0 FOR 301.933;
		LEVEL 1 FOR 3.821;
		LEVEL 0 FOR 86.691;
		LEVEL 1 FOR 1.336;
		LEVEL Z FOR 285.754;
	}
}

TRANSITION_LIST("d[4]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.279;
		LEVEL 1 FOR 0.286;
		LEVEL 0 FOR 198.113;
		LEVEL 1 FOR 0.822;
		LEVEL 0 FOR 99.585;
		LEVEL Z FOR 1.194;
		LEVEL 1 FOR 0.286;
		LEVEL 0 FOR 298.113;
		LEVEL 1 FOR 0.822;
		LEVEL 0 FOR 99.585;
		LEVEL Z FOR 2.586;
		LEVEL 0 FOR 7.256;
		LEVEL 1 FOR 3.033;
		LEVEL 0 FOR 287.125;
		LEVEL Z FOR 2.586;
		LEVEL 0 FOR 12.206;
		LEVEL 1 FOR 185.963;
		LEVEL Z FOR 1.831;
		LEVEL 1 FOR 1.29;
		LEVEL 0 FOR 0.912;
		LEVEL 1 FOR 6.799;
		LEVEL 0 FOR 188.006;
		LEVEL 1 FOR 0.822;
		LEVEL 0 FOR 99.585;
		LEVEL Z FOR 1.194;
		LEVEL 1 FOR 50.494;
		LEVEL 0 FOR 149.067;
		LEVEL Z FOR 1.831;
		LEVEL 0 FOR 2.202;
		LEVEL 1 FOR 1.411;
		LEVEL 0 FOR 0.792;
		LEVEL 1 FOR 2.196;
		LEVEL 0 FOR 0.361;
		LEVEL 1 FOR 94.677;
		LEVEL 0 FOR 0.217;
		LEVEL 1 FOR 99.43;
		LEVEL 0 FOR 100.916;
		LEVEL 1 FOR 6.564;
		LEVEL 0 FOR 0.235;
		LEVEL 1 FOR 4.98;
		LEVEL 0 FOR 83.615;
		LEVEL 1 FOR 1.965;
		LEVEL Z FOR 285.768;
	}
}

TRANSITION_LIST("d[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.04;
		LEVEL 1 FOR 0.385;
		LEVEL 0 FOR 197.632;
		LEVEL 1 FOR 1.312;
		LEVEL 0 FOR 99.457;
		LEVEL Z FOR 1.214;
		LEVEL 1 FOR 0.385;
		LEVEL 0 FOR 51.266;
		LEVEL 1 FOR 150.456;
		LEVEL 0 FOR 95.91;
		LEVEL 1 FOR 1.312;
		LEVEL 0 FOR 99.457;
		LEVEL Z FOR 2.606;
		LEVEL 0 FOR 4.895;
		LEVEL 1 FOR 0.247;
		LEVEL 0 FOR 5.666;
		LEVEL 1 FOR 87.129;
		LEVEL 0 FOR 199.457;
		LEVEL Z FOR 2.606;
		LEVEL 0 FOR 12.898;
		LEVEL 1 FOR 185.251;
		LEVEL Z FOR 1.851;
		LEVEL 1 FOR 0.439;
		LEVEL 0 FOR 1.717;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 94.469;
		LEVEL 1 FOR 1.312;
		LEVEL 0 FOR 99.457;
		LEVEL Z FOR 1.214;
		LEVEL 1 FOR 199.541;
		LEVEL Z FOR 1.851;
		LEVEL 1 FOR 0.439;
		LEVEL 0 FOR 3.469;
		LEVEL 1 FOR 0.792;
		LEVEL 0 FOR 6.108;
		LEVEL 1 FOR 90.785;
		LEVEL 0 FOR 0.448;
		LEVEL 1 FOR 199.119;
		LEVEL 0 FOR 0.996;
		LEVEL 1 FOR 97.385;
		LEVEL Z FOR 286.027;
	}
}

TRANSITION_LIST("d[2]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.269;
		LEVEL 1 FOR 103.29;
		LEVEL 0 FOR 94.64;
		LEVEL 1 FOR 1.333;
		LEVEL 0 FOR 99.543;
		LEVEL Z FOR 1.194;
		LEVEL 1 FOR 50.181;
		LEVEL 0 FOR 247.749;
		LEVEL 1 FOR 1.333;
		LEVEL 0 FOR 99.543;
		LEVEL Z FOR 2.586;
		LEVEL 0 FOR 2.266;
		LEVEL 1 FOR 3.296;
		LEVEL 0 FOR 0.361;
		LEVEL 1 FOR 91.948;
		LEVEL 0 FOR 47.097;
		LEVEL 1 FOR 152.446;
		LEVEL Z FOR 2.586;
		LEVEL 1 FOR 1.622;
		LEVEL 0 FOR 0.644;
		LEVEL 1 FOR 7.195;
		LEVEL 0 FOR 88.128;
		LEVEL 1 FOR 1.343;
		LEVEL 0 FOR 99.237;
		LEVEL Z FOR 1.831;
		LEVEL 0 FOR 9.267;
		LEVEL 1 FOR 0.318;
		LEVEL 0 FOR 186.953;
		LEVEL 1 FOR 1.333;
		LEVEL 0 FOR 99.543;
		LEVEL Z FOR 1.194;
		LEVEL 1 FOR 0.324;
		LEVEL 0 FOR 49.857;
		LEVEL 1 FOR 149.38;
		LEVEL Z FOR 1.831;
		LEVEL 1 FOR 1.622;
		LEVEL 0 FOR 1.597;
		LEVEL 1 FOR 0.792;
		LEVEL 0 FOR 0.668;
		LEVEL 1 FOR 0.247;
		LEVEL 0 FOR 1.294;
		LEVEL 1 FOR 3.015;
		LEVEL 0 FOR 300.35;
		LEVEL 1 FOR 89.976;
		LEVEL Z FOR 285.778;
	}
}

TRANSITION_LIST("d[1]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.341;
		LEVEL 1 FOR 0.603;
		LEVEL 0 FOR 103.701;
		LEVEL 1 FOR 194.502;
		LEVEL Z FOR 1.194;
		LEVEL 1 FOR 0.603;
		LEVEL 0 FOR 49.863;
		LEVEL 1 FOR 152.251;
		LEVEL 0 FOR 1.587;
		LEVEL 1 FOR 194.502;
		LEVEL Z FOR 2.586;
		LEVEL 1 FOR 1.049;
		LEVEL 0 FOR 2.739;
		LEVEL 1 FOR 0.653;
		LEVEL 0 FOR 0.247;
		LEVEL 1 FOR 1.005;
		LEVEL 0 FOR 4.791;
		LEVEL 1 FOR 134.75;
		LEVEL 0 FOR 152.18;
		LEVEL Z FOR 2.586;
		LEVEL 0 FOR 3.017;
		LEVEL 1 FOR 195.152;
		LEVEL Z FOR 1.831;
		LEVEL 1 FOR 1.049;
		LEVEL 0 FOR 1.968;
		LEVEL 1 FOR 294.397;
		LEVEL Z FOR 1.194;
		LEVEL 1 FOR 199.561;
		LEVEL Z FOR 1.831;
		LEVEL 1 FOR 1.049;
		LEVEL 0 FOR 3.111;
		LEVEL 1 FOR 0.792;
		LEVEL 0 FOR 197.79;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.275;
		LEVEL 1 FOR 4.042;
		LEVEL 0 FOR 1.222;
		LEVEL 1 FOR 91.28;
		LEVEL Z FOR 285.706;
	}
}

TRANSITION_LIST("d[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 113.04;
		LEVEL 1 FOR 104.526;
		LEVEL 0 FOR 93.894;
		LEVEL 1 FOR 1.293;
		LEVEL 0 FOR 99.073;
		LEVEL Z FOR 0.927;
		LEVEL 1 FOR 51.181;
		LEVEL 0 FOR 153.245;
		LEVEL 1 FOR 194.647;
		LEVEL Z FOR 2.606;
		LEVEL 1 FOR 145.373;
		LEVEL 0 FOR 152.021;
		LEVEL Z FOR 2.606;
		LEVEL 0 FOR 5.699;
		LEVEL 1 FOR 1.249;
		LEVEL 0 FOR 91.128;
		LEVEL 1 FOR 0.946;
		LEVEL 0 FOR 99.127;
		LEVEL Z FOR 1.851;
		LEVEL 0 FOR 1.821;
		LEVEL 1 FOR 0.633;
		LEVEL 0 FOR 100.293;
		LEVEL 1 FOR 194.647;
		LEVEL Z FOR 1.214;
		LEVEL 1 FOR 0.414;
		LEVEL 0 FOR 50.48;
		LEVEL 1 FOR 148.647;
		LEVEL Z FOR 1.851;
		LEVEL 1 FOR 101.258;
		LEVEL 0 FOR 1.038;
		LEVEL 1 FOR 100.452;
		LEVEL 0 FOR 102.029;
		LEVEL 1 FOR 94.764;
		LEVEL Z FOR 286.027;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "pc_sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "pc_sel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "pc_sel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "pc_sel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "we_rd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "we_rd[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "we_rd[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "k";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "k[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "d";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "d[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "d[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 45;
}

TIME_BAR
{
	TIME = 900000;
	MASTER = TRUE;
}
;

/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 100.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("l")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("l[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "l";
}

SIGNAL("l[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "l";
}

SIGNAL("l[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "l";
}

SIGNAL("l[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "l";
}

SIGNAL("l[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "l";
}

SIGNAL("l[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "l";
}

SIGNAL("l[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "l";
}

SIGNAL("l[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "l";
}

SIGNAL("lddr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("lddr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "lddr";
}

SIGNAL("lddr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "lddr";
}

SIGNAL("lddr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "lddr";
}

SIGNAL("r1_bus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("r2_bus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("r3_bus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("sw_bus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("k")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("k[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("l[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("l[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("l[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("l[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("l[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("l[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("l[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("l[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr3[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr1[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("outr2[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("|dataBus|sw_r3_r2_r1_bus")
{
	MEMBERS = "sw_bus", "r3_bus", "r2_bus", "r1_bus";
}

GROUP("l~result")
{
	MEMBERS = "l[7]~result", "l[6]~result", "l[5]~result", "l[4]~result", "l[3]~result", "l[2]~result", "l[1]~result", "l[0]~result";
}

GROUP("outr3")
{
	MEMBERS = "outr3[7]", "outr3[6]", "outr3[5]", "outr3[4]", "outr3[3]", "outr3[2]", "outr3[1]", "outr3[0]";
}

GROUP("outr2")
{
	MEMBERS = "outr2[7]", "outr2[6]", "outr2[5]", "outr2[4]", "outr2[3]", "outr2[2]", "outr2[1]", "outr2[0]";
}

GROUP("outr1")
{
	MEMBERS = "outr1[7]", "outr1[6]", "outr1[5]", "outr1[4]", "outr1[3]", "outr1[2]", "outr1[1]", "outr1[0]";
}

TRANSITION_LIST("Clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 20;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("l[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2000.0;
	}
}

TRANSITION_LIST("l[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2000.0;
	}
}

TRANSITION_LIST("l[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2000.0;
	}
}

TRANSITION_LIST("l[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2000.0;
	}
}

TRANSITION_LIST("l[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2000.0;
	}
}

TRANSITION_LIST("l[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2000.0;
	}
}

TRANSITION_LIST("l[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2000.0;
	}
}

TRANSITION_LIST("l[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2000.0;
	}
}

TRANSITION_LIST("lddr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("lddr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("lddr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("r1_bus")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("r2_bus")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 500.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("r3_bus")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("sw_bus")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 600.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("k[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 99.7;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 500.1;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 99.7;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("k[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 99.7;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 200.0;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 500.1;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 99.7;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("k[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 0.1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 0.2;
			LEVEL 0 FOR 99.7;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 800.1;
		}
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 99.7;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("k[4]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 399.9;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("k[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("k[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("k[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 900.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 500.0;
	}
}

TRANSITION_LIST("k[0]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 1 FOR 0.3;
		LEVEL 0 FOR 99.7;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("l[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 109.548;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.655;
			LEVEL 1 FOR 98.846;
			LEVEL 0 FOR 0.775;
			LEVEL 1 FOR 98.453;
			LEVEL Z FOR 100.841;
			LEVEL 0 FOR 0.482;
			LEVEL 1 FOR 0.603;
			LEVEL 0 FOR 198.074;
			LEVEL Z FOR 200.768;
			LEVEL 0 FOR 99.232;
			LEVEL Z FOR 201.271;
		}
		LEVEL 0 FOR 0.655;
		LEVEL 1 FOR 98.846;
		LEVEL 0 FOR 0.775;
		LEVEL 1 FOR 98.453;
		LEVEL Z FOR 100.841;
		LEVEL 0 FOR 0.482;
		LEVEL 1 FOR 0.603;
		LEVEL 0 FOR 198.074;
		LEVEL Z FOR 200.768;
		LEVEL 0 FOR 99.232;
		LEVEL Z FOR 91.723;
	}
}

TRANSITION_LIST("l[1]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 109.586;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 198.729;
			LEVEL Z FOR 101.271;
			LEVEL 0 FOR 0.633;
			LEVEL 1 FOR 98.405;
			LEVEL 0 FOR 2.161;
			LEVEL 1 FOR 97.53;
			LEVEL Z FOR 200.768;
			LEVEL 0 FOR 99.232;
			LEVEL Z FOR 201.271;
		}
		LEVEL 0 FOR 198.729;
		LEVEL Z FOR 101.271;
		LEVEL 0 FOR 0.633;
		LEVEL 1 FOR 98.405;
		LEVEL 0 FOR 2.161;
		LEVEL 1 FOR 97.53;
		LEVEL Z FOR 200.768;
		LEVEL 0 FOR 99.232;
		LEVEL Z FOR 91.685;
	}
}

TRANSITION_LIST("l[2]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 109.142;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 198.729;
			LEVEL Z FOR 101.271;
			LEVEL 0 FOR 198.729;
			LEVEL Z FOR 200.768;
			LEVEL 0 FOR 99.232;
			LEVEL Z FOR 201.271;
		}
		LEVEL 0 FOR 198.729;
		LEVEL Z FOR 101.271;
		LEVEL 0 FOR 198.729;
		LEVEL Z FOR 200.768;
		LEVEL 0 FOR 99.232;
		LEVEL Z FOR 92.129;
	}
}

TRANSITION_LIST("l[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 110.188;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 198.981;
			LEVEL Z FOR 101.019;
			LEVEL 0 FOR 198.981;
			LEVEL Z FOR 200.516;
			LEVEL 0 FOR 99.484;
			LEVEL Z FOR 201.019;
		}
		LEVEL 0 FOR 198.981;
		LEVEL Z FOR 101.019;
		LEVEL 0 FOR 198.981;
		LEVEL Z FOR 200.516;
		LEVEL 0 FOR 99.484;
		LEVEL Z FOR 90.831;
	}
}

TRANSITION_LIST("l[4]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 109.558;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 198.729;
			LEVEL Z FOR 101.271;
			LEVEL 0 FOR 0.655;
			LEVEL 1 FOR 98.674;
			LEVEL 0 FOR 1.627;
			LEVEL 1 FOR 97.773;
			LEVEL Z FOR 200.768;
			LEVEL 0 FOR 99.232;
			LEVEL Z FOR 201.271;
		}
		LEVEL 0 FOR 198.729;
		LEVEL Z FOR 101.271;
		LEVEL 0 FOR 0.655;
		LEVEL 1 FOR 98.674;
		LEVEL 0 FOR 1.627;
		LEVEL 1 FOR 97.773;
		LEVEL Z FOR 200.768;
		LEVEL 0 FOR 99.232;
		LEVEL Z FOR 91.713;
	}
}

TRANSITION_LIST("l[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 109.558;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.458;
			LEVEL 1 FOR 99.219;
			LEVEL 0 FOR 0.533;
			LEVEL 1 FOR 98.519;
			LEVEL Z FOR 100.768;
			LEVEL 0 FOR 199.232;
			LEVEL Z FOR 200.768;
			LEVEL 0 FOR 99.232;
			LEVEL Z FOR 201.271;
		}
		LEVEL 0 FOR 0.458;
		LEVEL 1 FOR 99.219;
		LEVEL 0 FOR 0.533;
		LEVEL 1 FOR 98.519;
		LEVEL Z FOR 100.768;
		LEVEL 0 FOR 199.232;
		LEVEL Z FOR 200.768;
		LEVEL 0 FOR 99.232;
		LEVEL Z FOR 91.713;
	}
}

TRANSITION_LIST("l[6]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 108.679;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.114;
			LEVEL 1 FOR 99.353;
			LEVEL 0 FOR 0.647;
			LEVEL 1 FOR 98.867;
			LEVEL Z FOR 100.535;
			LEVEL 0 FOR 0.598;
			LEVEL 1 FOR 99.353;
			LEVEL 0 FOR 1.026;
			LEVEL 1 FOR 98.488;
			LEVEL Z FOR 200.516;
			LEVEL 0 FOR 99.484;
			LEVEL Z FOR 201.019;
		}
		LEVEL 0 FOR 0.114;
		LEVEL 1 FOR 99.353;
		LEVEL 0 FOR 0.647;
		LEVEL 1 FOR 98.867;
		LEVEL Z FOR 100.535;
		LEVEL 0 FOR 0.598;
		LEVEL 1 FOR 99.353;
		LEVEL 0 FOR 1.026;
		LEVEL 1 FOR 98.488;
		LEVEL Z FOR 200.516;
		LEVEL 0 FOR 99.484;
		LEVEL Z FOR 92.34;
	}
}

TRANSITION_LIST("l[7]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 108.381;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 0.534;
			LEVEL 1 FOR 99.692;
			LEVEL 0 FOR 0.308;
			LEVEL 1 FOR 98.447;
			LEVEL Z FOR 100.796;
			LEVEL 0 FOR 0.757;
			LEVEL 1 FOR 99.795;
			LEVEL 0 FOR 0.408;
			LEVEL 1 FOR 98.244;
			LEVEL Z FOR 200.516;
			LEVEL 0 FOR 99.484;
			LEVEL Z FOR 201.019;
		}
		LEVEL 0 FOR 0.534;
		LEVEL 1 FOR 99.692;
		LEVEL 0 FOR 0.308;
		LEVEL 1 FOR 98.447;
		LEVEL Z FOR 100.796;
		LEVEL 0 FOR 0.757;
		LEVEL 1 FOR 99.795;
		LEVEL 0 FOR 0.408;
		LEVEL 1 FOR 98.244;
		LEVEL Z FOR 200.516;
		LEVEL 0 FOR 99.484;
		LEVEL Z FOR 92.638;
	}
}

TRANSITION_LIST("outr3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 257.207;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 700.0;
		}
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 442.793;
	}
}

TRANSITION_LIST("outr3[1]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 556.999;
		LEVEL 1 FOR 443.001;
	}
}

TRANSITION_LIST("outr3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("outr3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("outr3[4]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 555.218;
		LEVEL 1 FOR 444.782;
	}
}

TRANSITION_LIST("outr3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 255.598;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 700.0;
		}
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 444.402;
	}
}

TRANSITION_LIST("outr3[6]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 255.29;
		LEVEL 1 FOR 744.71;
	}
}

TRANSITION_LIST("outr3[7]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 255.623;
		LEVEL 1 FOR 744.377;
	}
}

TRANSITION_LIST("outr1[0]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 156.134;
		LEVEL 1 FOR 843.866;
	}
}

TRANSITION_LIST("outr1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("outr1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("outr1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("outr1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("outr1[5]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 155.11;
		LEVEL 1 FOR 844.89;
	}
}

TRANSITION_LIST("outr1[6]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 156.11;
		LEVEL 1 FOR 843.89;
	}
}

TRANSITION_LIST("outr1[7]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 156.683;
		LEVEL 1 FOR 843.317;
	}
}

TRANSITION_LIST("outr2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("outr2[1]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 455.254;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 44.746;
	}
}

TRANSITION_LIST("outr2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("outr2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("outr2[4]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 455.227;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 44.773;
	}
}

TRANSITION_LIST("outr2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("outr2[6]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 455.059;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 44.941;
	}
}

TRANSITION_LIST("outr2[7]")
{
	NODE
	{
		REPEAT = 2;
		LEVEL 0 FOR 456.912;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 43.088;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "k";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "k[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "k[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "|dataBus|sw_r3_r2_r1_bus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "sw_bus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "r3_bus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "r2_bus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "r1_bus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "lddr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "lddr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "lddr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "lddr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "l";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23, 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "l[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "l[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "l[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "l[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "l[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "l[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "l[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "l[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "l~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32, 33, 34, 35, 36;
}

DISPLAY_LINE
{
	CHANNEL = "l[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "l[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "l[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "l[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "l[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "l[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "l[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "l[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "outr3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39, 40, 41, 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "outr3[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outr3[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outr3[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outr3[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outr3[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outr3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outr3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outr3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "outr1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
	CHILDREN = 47, 48, 49, 50, 51, 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "outr1[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outr1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outr1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outr1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outr1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outr1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outr1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outr1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 46;
}

DISPLAY_LINE
{
	CHANNEL = "outr2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
	CHILDREN = 56, 57, 58, 59, 60, 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "outr2[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outr2[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outr2[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outr2[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outr2[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outr2[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outr2[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "outr2[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 55;
}

TIME_BAR
{
	TIME = 28475;
	MASTER = TRUE;
}
;
